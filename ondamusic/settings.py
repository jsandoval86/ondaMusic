"""
Django settings for ondamusic project.

Generated by 'django-admin startproject' using Django 1.9.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os
import datetime


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'yi+%$!v-sz4s^krh88yzsr%o20f$btejb$9(fz-4ji4a8@tn#i'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
	'django.contrib.admin',
	'django.contrib.auth',
	'django.contrib.contenttypes',
	'django.contrib.sessions',
	'django.contrib.messages',
	'django.contrib.staticfiles',
	
	#Thirty-party
	'rest_framework',
	'oauth2_provider',
	'social.apps.django_app.default',
	'djcelery',
	'django.contrib.algoliasearch',

	#AppsProject
	'app',

]

MIDDLEWARE_CLASSES = [
	'django.middleware.security.SecurityMiddleware',
	'django.contrib.sessions.middleware.SessionMiddleware',
	'django.middleware.common.CommonMiddleware',
	'django.middleware.csrf.CsrfViewMiddleware',
	'django.contrib.auth.middleware.AuthenticationMiddleware',
	'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
	'django.contrib.messages.middleware.MessageMiddleware',
	'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ondamusic.urls'

TEMPLATES = [
	{
		'BACKEND': 'django.template.backends.django.DjangoTemplates',
		'DIRS': [],
		'APP_DIRS': True,
		'OPTIONS': {
			'context_processors': [
				'django.template.context_processors.debug',
				'django.template.context_processors.request',
				'django.contrib.auth.context_processors.auth',
				'django.contrib.messages.context_processors.messages',
			],
		},
	},
]

WSGI_APPLICATION = 'ondamusic.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
	'default': {
		'ENGINE': 'django.db.backends.sqlite3',
		'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
	}
}

# Celery configurations
import djcelery
djcelery.setup_loader()

CELERY_BROKER_URL = 'amqp://guest:guest@localhost//'


# Rest Framework configurations
REST_FRAMEWORK = {
	'DEFAULT_AUTHENTICATION_CLASSES' : [
		# JWT
		'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
		#OAuth
		'rest_framework_social_oauth2.authentication.SocialAuthentication',
		]
}

AUTHENTICATION_BACKENDS = (
	# Facebook OAuth2
	'social.backends.facebook.FacebookOAuth2',
	# Github OAuth2
	'social.backends.github.GithubOAuth2',
	# Django
	'django.contrib.auth.backends.ModelBackend'
)


# JWT configuration
JWT_AUTH = {
	'JWT_EXPIRATION_DELTA': datetime.timedelta(seconds=1800),
}

# Facebook configuration
SOCIAL_AUTH_FACEBOOK_KEY = os.environ.get('SOCIAL_AUTH_FACEBOOK_KEY', '')
SOCIAL_AUTH_FACEBOOK_SECRET = os.environ.get('SOCIAL_AUTH_FACEBOOK_SECRET', '')
SOCIAL_AUTH_FACEBOOK_SCOPE = [ 'email' ]

# Github configuration
SOCIAL_AUTH_GITHUB_KEY = os.environ.get('SOCIAL_AUTH_GITHUB_KEY', '')
SOCIAL_AUTH_GITHUB_SECRET = os.environ.get('SOCIAL_AUTH_GITHUB_SECRET', '')

# Configuration email services
EMAIL_BACKEND = 'sgbackend.SendGridBackend'
SENDGRID_API_KEY = os.environ.get('SENDGRID_API_KEY', '')

# Algolia configurations
ALGOLIA = {
	'APPLICATION_ID': os.environ.get('ALGOLIA_APPLICATION_ID', ''),
	'API_KEY': os.environ.get('ALGOLIA_API_KEY', ''),
	'INDEX_PREFIX' : 'ondamusic'
}

# Pusher configurations
PUSHER_APP_ID = os.environ.get('PUSHER_APP_ID', '')
PUSHER_KEY = os.environ.get('PUSHER_KEY', '')
PUSHER_SECRET = os.environ.get('PUSHER_SECRET', '')


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
	{
		'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
	},
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'
